{"version":3,"sources":["index.js"],"names":["Square","props","state","value","className","onClick","this","React","Component","Board","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2OAKMA,G,wDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,MAHO,E,qDAOR,IAAD,OACP,OACE,4BAAQC,UAAU,SAASC,QAAW,kBAAK,EAAKJ,MAAMI,YACnDC,KAAKL,MAAME,W,GAXCI,IAAMC,YAiBrBC,E,kDACJ,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXQ,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJK,E,wDAQNC,GACV,IAAMJ,EAAUJ,KAAKJ,MAAMQ,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAIxCJ,EAAQI,GAAKR,KAAKJ,MAAMW,QAAU,IAAM,IACxCP,KAAKW,SAAS,CACZP,QAASA,EACTG,SAAUP,KAAKJ,MAAMW,a,mCAMZC,GAAI,IAAD,OACd,OACE,kBAACd,EAAD,CACEG,MAAOG,KAAKJ,MAAMQ,QAAQI,GAC1BT,QAAS,kBAAM,EAAKa,YAAYJ,Q,+BAMpC,IACIK,EADEC,EAASJ,EAAgBV,KAAKJ,MAAMQ,SAQ1C,OALES,EADEC,EACO,WAAaA,EAEb,oBAAsBd,KAAKJ,MAAMW,QAAU,IAAM,KAI1D,6BACE,yBAAKT,UAAU,UAAUe,GAEzB,yBAAKf,UAAU,aACZE,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,IAErB,yBAAKjB,UAAU,aACZE,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,IAErB,yBAAKjB,UAAU,aACZE,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,S,GA3DTd,IAAMC,WAkEpBc,E,uKAEF,OACE,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACK,EAAD,OAEF,yBAAKL,UAAU,aACb,8BACA,mC,GATSG,IAAMC,WAsBzB,SAASQ,EAAgBN,GAWvB,IAVA,IAAMa,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CAAC,IAAD,cACnBS,EAAMT,GADa,GAC9BW,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACpE,OAAOjB,EAAQe,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.ffdf7acd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\n\r\nclass Square extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"square\" onClick= { ()=> this.props.onClick() }>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i){\r\n    const squares = this.state.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      squares: squares,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner){\r\n      status = \"Winner: \" + winner;\r\n    }else{\r\n      status = \"Next Player is: \" + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}